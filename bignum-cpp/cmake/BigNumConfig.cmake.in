@PACKAGE_INIT@

# BigNum CMake configuration file

include(CMakeFindDependencyMacro)

# Check for required features
include(CheckCXXSourceCompiles)

# Save current CMAKE_REQUIRED_* variables
set(_BIGNUM_CMAKE_REQUIRED_FLAGS ${CMAKE_REQUIRED_FLAGS})
set(_BIGNUM_CMAKE_REQUIRED_DEFINITIONS ${CMAKE_REQUIRED_DEFINITIONS})

# Set requirements for the check
set(CMAKE_REQUIRED_FLAGS "-std=c++17")

check_cxx_source_compiles(
    "
    int main() {
        __uint128_t x = 1;
        __int128_t y = 1;
        return 0;
    }
    "
    BIGNUM_HAS_INT128_SUPPORT
)

# Restore CMAKE_REQUIRED_* variables
set(CMAKE_REQUIRED_FLAGS ${_BIGNUM_CMAKE_REQUIRED_FLAGS})
set(CMAKE_REQUIRED_DEFINITIONS ${_BIGNUM_CMAKE_REQUIRED_DEFINITIONS})

if(NOT BIGNUM_HAS_INT128_SUPPORT)
    set(BigNum_NOT_FOUND_MESSAGE "BigNum requires 128-bit integer support (__int128)")
    set(BigNum_FOUND FALSE)
    return()
endif()

# Include the targets file
include("${CMAKE_CURRENT_LIST_DIR}/BigNumTargets.cmake")

# Check that all required components are available
check_required_components(BigNum)

# Provide information about the package
set(BigNum_VERSION @PROJECT_VERSION@)
set(BigNum_VERSION_MAJOR @PROJECT_VERSION_MAJOR@)
set(BigNum_VERSION_MINOR @PROJECT_VERSION_MINOR@)
set(BigNum_VERSION_PATCH @PROJECT_VERSION_PATCH@)

# Set the found flag
set(BigNum_FOUND TRUE)